name: Create Terraform pre-requisites

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/**'
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  PG_PASSWORD: ${{ secrets.PG_PASSWORD }}
  AWS_DEFAULT_REGION: "eu-west-1"
  BUCKET_TF_STATE: "terraform-remote-state-ljenecker-worth"

jobs:
  check-prerequisite:
    name: Check prerequisite for Terraform
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      # - name: Check if S3 bucket exist
      #   run: |
      #     BUCKET=$(aws s3api list-buckets --query "Buckets[?Name == '${BUCKET_TF_STATE}'].Name")

      #     if [ ${#BUCKET} -eq 2 ]; then
      #         echo "BUCKET_EXIST=false" >> "$GITHUB_ENV"
      #     else
      #         echo "BUCKET_EXIST=true" >> "$GITHUB_ENV"
      #     fi

      # - name: Create prerequisite for Terraform
      #   if: ${{ env.BUCKET_EXIST == 'false' }}
      #   run: |
      #     aws s3api create-bucket --bucket $BUCKET_TF_STATE --region $AWS_DEFAULT_REGION --create-bucket-configuration LocationConstraint=$AWS_DEFAULT_REGION
      #     aws s3api put-bucket-encryption --bucket $BUCKET_TF_STATE --server-side-encryption-configuration "{\"Rules\": [{\"ApplyServerSideEncryptionByDefault\":{\"SSEAlgorithm\": \"AES256\"}}]}"
      #     aws dynamodb create-table --table-name Terraform-backend-lock --attribute-definitions AttributeName=LockID,AttributeType=S --key-schema AttributeName=LockID,KeyType=HASH --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5
      #     aws secretsmanager create-secret --name ecs-github-token --secret-string $GH_TOKEN
      #     # aws secretsmanager delete-secret --secret-id ecs-github-token  --force-delete-without-recovery
      #     aws secretsmanager create-secret --name postgresdb_passwd --secret-string $PG_PASSWORD
      #     # aws secretsmanager delete-secret --secret-id postgresdb_passwd --force-delete-without-recovery
      #     aws iam create-service-linked-role --aws-service-name codestar-notifications.amazonaws.com
      #     echo "BUCKET_EXIST=true" >> "$GITHUB_ENV"
      # - name: Setup Terraform with specified version on the runner
      #   if: ${{ env.BUCKET_EXIST == 'true' }}
      #   uses: hashicorp/setup-terraform@v2
      #   with:
      #     terraform_version: 1.3.0

      # - name: Terraform init
      #   if: ${{ env.BUCKET_EXIST == 'true' }}
      #   id: init
      #   run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"
      #   continue-on-error: false

      # - name: Terraform plan
      #   if: ${{ env.BUCKET_EXIST == 'true' }}
      #   id: plan
      #   run: terraform plan -no-color -input=false
      #   continue-on-error: false

      # - name: Terraform Apply
      #   if: ${{ env.BUCKET_EXIST == 'true' }}
      #   run: terraform apply -auto-approve -input=false


      # - name: Terraform Destroy
      #   if: ${{ env.BUCKET_EXIST == 'true' }}
      #   run: terraform destroy -auto-approve -input=false
